---
import { type CollectionEntry, getCollection, render } from "astro:content";
import BlogPost from "../../layouts/BlogPost.astro";
import PostPagination from "@/components/ui/PostPagination";
type BlogEntry = CollectionEntry<"blog">;

export async function getStaticPaths() {
  const posts = await getCollection("blog");
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: post,
  }));
}
type Props = CollectionEntry<"blog">;

const post = Astro.props;
const { Content, headings } = await render(post); // üëà pega os headings tamb√©m

const toc = headings.map((h) => ({
  depth: h.depth,
  text: h.text,
  slug: h.slug,
}));
// Pega todos os posts e ordena por data
const allPosts = (await getCollection("blog")).sort(
  (a, b) =>
    new Date(a.data.pubDate).getTime() - new Date(b.data.pubDate).getTime()
);

const { slug } = Astro.params;
const postIndex = allPosts.findIndex((p) => p.slug === slug);

if (postIndex === -1) throw new Error("Post n√£o encontrado");

// Posts anterior e pr√≥ximo
const prevPost = allPosts[postIndex - 1] ?? null;
const nextPost = allPosts[postIndex + 1] ?? null;
---

<BlogPost toc={toc}>
  <section
    class="flex flex-col max-[1030px]:w-[80%] w-[50%] mx-auto gap-5 max-w-none"
  >
    <img src={post.data.image} alt={post.data.description} />
    <PostPagination nextPost={nextPost} prevPost={prevPost} />
    <div class="content-wrapper whitespace-pre-line">
      <Content />
    </div>
  </section>
</BlogPost>
